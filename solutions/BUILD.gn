shared_library("solutions") {
  include_dirs = [ "//" ]

  sources = [
    "//solutions/add_two_numbers.cpp",
    "//solutions/add_two_numbers.h",
    "//solutions/contains_duplicate.cpp",
    "//solutions/contains_duplicate.h",
    "//solutions/convert_to_title.cpp",
    "//solutions/convert_to_title.h",
    "//solutions/delete_duplicates.cpp",
    "//solutions/delete_duplicates.h",
    "//solutions/delete_duplicates2.cpp",
    "//solutions/delete_duplicates2.h",
    "//solutions/delete_middle.cpp",
    "//solutions/delete_middle.h",
    "//solutions/delete_node.cpp",
    "//solutions/delete_node.h",
    "//solutions/delete_node2.cpp",
    "//solutions/delete_node2.h",
    "//solutions/detect_capital_use.cpp",
    "//solutions/detect_capital_use.h",
    "//solutions/detect_cycle.cpp",
    "//solutions/detect_cycle.h",
    "//solutions/generate.cpp",
    "//solutions/generate.h",
    "//solutions/get_decimal_value.cpp",
    "//solutions/get_decimal_value.h",
    "//solutions/get_intersection_node.cpp",
    "//solutions/get_intersection_node.h",
    "//solutions/get_kth_from_end.cpp",
    "//solutions/get_kth_from_end.h",
    "//solutions/has_cycle.cpp",
    "//solutions/has_cycle.h",
    "//solutions/in_order_traversal.cpp",
    "//solutions/in_order_traversal.h",
    "//solutions/is_palindrome.cpp",
    "//solutions/is_palindrome.h",
    "//solutions/kth_to_last.cpp",
    "//solutions/kth_to_last.h",
    "//solutions/length_of_last_word.cpp",
    "//solutions/length_of_last_word.h",
    "//solutions/length_of_longest_substring.cpp",
    "//solutions/length_of_longest_substring.h",
    "//solutions/list_node.cpp",
    "//solutions/list_node.h",
    "//solutions/longest_common_prefix.cpp",
    "//solutions/longest_common_prefix.h",
    "//solutions/longest_palindrome.cc",
    "//solutions/longest_palindrome.h",
    "//solutions/matrix_reshape.cpp",
    "//solutions/matrix_reshape.h",
    "//solutions/max_area.cpp",
    "//solutions/max_area.h",
    "//solutions/max_profit.cpp",
    "//solutions/max_profit.h",
    "//solutions/max_sub_array.cpp",
    "//solutions/max_sub_array.h",
    "//solutions/merge.cpp",
    "//solutions/merge.h",
    "//solutions/merge_k_sorted_lists.cpp",
    "//solutions/merge_k_sorted_lists.h",
    "//solutions/merge_two_lists.cpp",
    "//solutions/merge_two_lists.h",
    "//solutions/middle_node.cpp",
    "//solutions/middle_node.h",
    "//solutions/odd_even_list.cpp",
    "//solutions/odd_even_list.h",
    "//solutions/post_order_traversal.cpp",
    "//solutions/post_order_traversal.h",
    "//solutions/pre_order_traversal.cpp",
    "//solutions/pre_order_traversal.h",
    "//solutions/remove_duplicate_nodes.cpp",
    "//solutions/remove_duplicate_nodes.h",
    "//solutions/remove_elements.cpp",
    "//solutions/remove_elements.h",
    "//solutions/remove_nth_from_end.cpp",
    "//solutions/remove_nth_from_end.h",
    "//solutions/reverse.cpp",
    "//solutions/reverse.h",
    "//solutions/reverse_list.cpp",
    "//solutions/reverse_list.h",
    "//solutions/reverse_print.cpp",
    "//solutions/reverse_print.h",
    "//solutions/reverse_string.cpp",
    "//solutions/reverse_string.h",
    "//solutions/split_list_to_parts.cpp",
    "//solutions/split_list_to_parts.h",
    "//solutions/str_str.cpp",
    "//solutions/str_str.h",
    "//solutions/swap_pairs.cpp",
    "//solutions/swap_pairs.h",
    "//solutions/title_to_number.cpp",
    "//solutions/title_to_number.h",
    "//solutions/tree_node.cpp",
    "//solutions/tree_node.h",
    "//solutions/two_sum.cpp",
    "//solutions/two_sum.h",
  ]
}
